# This is a basic workflow to help you get started with Actions

name: sonar

  # Controls when the workflow will run
on: [push, workflow_dispatch]
jobs:
  sonar:
    name: sonar
    runs-on: ubuntu-latest
    env:
      SONAR_SCANNER_VERSION: 4.4.0.2170
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - name: update
        run: sudo apt update && sudo apt upgrade

      - name: install trollsar dependencies
        run: sudo apt install libboost-all-dev


      - name: checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: install cuda
        uses: Jimver/cuda-toolkit@v0.2.4
        id: cuda-toolkit
        with:
          cuda: '11.2.2'

      - name: install optix dependencies
        run: sudo apt install libglu1-mesa-dev freeglut3-dev mesa-common-dev xorg-dev 

      - name: build optix
        run: |
          cd optix/7.4/SDK/
          mkdir build
          cd build
          cmake .. -DCUDA_CUDA_LIBRARY=${{steps.cuda-toolkit.outputs.CUDA_PATH}}/lib64/stubs
          make -j 12

      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        run: |
          mkdir -p $HOME/.sonar
          curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }} 
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH
      - name: download and set up build-wrapper
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: |
          curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH
      - name: run build-wrapper
        # TODO: build command!
        run: |
          mkdir build
          cd build
          cmake ..
          cd ..
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build
      - name: run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
